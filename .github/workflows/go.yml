name: Go

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Go Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v3

    - name: Set up Go 1.x
      uses: actions/setup-go@v4
      with:
        go-version: stable
      id: go

    - name: Run Tests (Linux)
      if: runner.os == 'Linux'
      run: make check

    - name: Run Short Tests (Non-Linux)
      if: runner.os != 'Linux'
      run: make check

    # Codecov commands commented out since ZSuite doesn't have an account

    # - name: Upload Code Coverage
    #   if: runner.os == 'Linux'
    #   run: bash <(curl -s https://codecov.io/bash)

  winbuild:
    name: Build (Windows)
    runs-on: [ windows-latest ]
    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v3

    - name: Set up Go 1.x
      uses: actions/setup-go@v4
      with:
        go-version: stable
      id: go

    - name: Install make (Windows)
      run: |
        choco install -y make mingw

    - name: Run Short Tests (Non-Linux)
      run: |
        go test ./... -short

  docker:
    name: Docker build
    runs-on: [ ubuntu-latest ]
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v4
      with:
        go-version: stable
      id: go

    - name: Setup Node / NPM
      if: runner.os == 'Linux'
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Check out code into the Go module directory
      uses: actions/checkout@v3

    # disable and stop mono-xsp4.service
    # Details: https://github.com/actions/virtual-environments/issues/2821
    - name: Ubuntu 20.04 Cleanup
      if: runner.os == 'Linux'
      run: |
        sudo systemctl disable mono-xsp4.service || true
        sudo systemctl stop mono-xsp4.service || true
        sudo killall mono || true

    - name: Build Frontend
      run: make build

    - name: Docker Build
      if: runner.os == 'Linux'
      run: make docker-hub
